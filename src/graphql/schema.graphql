# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  name: String!
  password: String!
  username: String!
  email: String!
  biography: String
  picture: String
  city: String!
  birthday: BigInt!
  createdAt: BigInt!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type JwtPayloadResponse {
  username: String!
  password: String!
  iat: BigInt!
  exp: BigInt!
  token: String
}

type Comment {
  id: ID!
  text: String!
  created_at: BigInt!
}

type PostComment {
  id: String!
  text: String!
  createdAt: BigInt!
  owner: User!
}

type Post {
  id: ID!
  text: String!
  picture: String
  createdAt: BigInt!
  likes: Float!
}

type PostTimeline {
  id: String!
  text: String!
  picture: String
  createdAt: BigInt!
  likes: Float!
  timestamp: BigInt!
  owner: User!
}

type Query {
  isUserFollowing(sourceUsername: String!, sinkUsername: String!): Boolean!
  findUserByUsername(username: String!): User!
  findAll: [User!]!
  findUserFollowers(username: String!): [User!]!
  findFollowedsByUser(username: String!): [User!]!
  findPostById(id: String!): Post!
  findUserPosts(username: String!): [Post!]!
  findPostComments(postId: String!): [PostComment!]!
  getUserTimeline(username: String!): [PostTimeline!]!
}

type Mutation {
  createUser(userInput: CreateUserInput!): User!
  followUser(sourceUsername: String!, sinkUsername: String!): Boolean!
  unfollowUser(sourceUsername: String!, sinkUsername: String!): Boolean!
  deleteUser(username: String!): Boolean!
  updateUser(username: String!, updatedUser: UpdateUserInput!): User!
  likePost(username: String!, postId: String!): Boolean!
  unlikePost(username: String!, postId: String!): Boolean!
  comment(username: String!, postId: String!, commentInput: CommentInput!): Comment!
  deleteComment(username: String!, postId: String!, commentId: String!): Boolean!
  createPost(username: String!, postInput: CreatePostInput!): Post!
  updatePost(postId: String!, updatePost: CreatePostInput!): Post!
  deletePost(postId: String!): Boolean!
  login(username: String!, password: String!): JwtPayloadResponse!
}

input CreateUserInput {
  username: String!
  password: String!
  name: String!
  biography: String
  picture: String
  city: String!
  birthday: BigInt!
}

input UpdateUserInput {
  password: String
  name: String
  biography: String
  picture: String
  city: String
  birthday: BigInt
}

input CommentInput {
  text: String!
}

input CreatePostInput {
  text: String!
  picture: String
}